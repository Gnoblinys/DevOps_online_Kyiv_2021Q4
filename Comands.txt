git Init
$ git init
$ git init<folder>

& git init . //check all files

REMOTE / PUSH / PULL
$ git remote add origin <URK.git> //Команда git remote add origin <URL.git> создает
новый пульт дистанционного управления с именем origin ,
расположенный по адресу <URL.git>.
Как только вы сделаете это, в ваших командах push вы можете нажать
на origin вместо того, чтобы вводить весь <URL.git>.

$ git push -u origin main // upload from Main(<local data>) to origin(<URL.git>)
-u -upstream // set for future connect betwen local and remote branch

branch
$ git branch //list branches
- M <OldNameBranch> <NewNameBranch> //Rename branch
$ git branch branch-name​ //create new branch
$ git branch -D <NameBranch> //delete <NameBranch>

checkout
git checkout <SomeBranch> // move to <SomeBranch>
git checkout -b <NameBranch> // create <NameBranch> and move to it



Clone
$ git clone<remote repository url> <FolderName> // клонирует репо но переименует папку

Git configuration and help
$ git config _name "_value" –set property
$ git config –-global –for current user
$ git config –-system –for all users
$ git config --global user.name "IvanIvanov"
$ git config--list –get config for current repo
git config --global core.editor "code --wait"
$ gitconfig--global core.editor"'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst-notabbar-nosession-noPlugin"



.gitignore
# no .a files*.a
# but do track lib.a, even though you're ignoring .a files above!lib.a
# ignore all files in the build/ directorybuild/
# ignore all .pdf files in the doc/ directorydoc/**/*.pdf

git config
&git config --global user.name

$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status

HELP
$ githelp<verb>
$ git<verb> --help
$ mangit-<verb>